# Please copy this part to your ~/.gitconfig
# or include it if git > 0.7.10
# [include]
#    path = /home/gsemet/.oh-my-zsh/dot_files/gitconfig

[alias]
   commit = commit -s # Always sign commit
   stash = stash -u   # you want to stash untracked files also
   st = status
   ci = commit
   br = branch
   co = checkout
   df = diff
   lg = log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit --date=relative
   loo = log --pretty=oneline --abbrev-commit
   lol = log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit
   lola = log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit --all
   loa = log --graph --abbrev-commit --all
   llc = log --decorate --pretty=oneline --abbrev-commit -1
   lc = show HEAD
   id = rev-parse HEAD

   rewrite-history = rebase -i HEAD~2
   rewrite-history1 = rebase -i HEAD~
   rewrite-history2 = rebase -i HEAD~2
   rewrite-history3 = rebase -i HEAD~3
   rewrite-history4 = rebase -i HEAD~4
   rewrite-history5 = rebase -i HEAD~5
   rewrite-history6 = rebase -i HEAD~6
   rewrite-history7 = rebase -i HEAD~7
   rewrite-history8 = rebase -i HEAD~8
   rewrite-history9 = rebase -i HEAD~9
   rewrite-history10 = rebase -i HEAD~10
   tags = tag -l
   branches = branch -a
   remotes = remote -v
   sync = fetch --all
   root = rev-parse --show-toplevel
   parents = show --pretty=%P

   # For Git hub - uncomment if you don't have git extras
   #
   # Easily checkout local copies of pull requests from GitHub remotes:
   #
   # git pr 4 - creates local branch pr/4 from the origin remote and checks it out
   # git pr 4 upstream - creates local branch pr/4 from upstream remote and checks it out
   # git pr-clean - removes all pr/* branches from your local repo
   # pr  = "!f() { git fetch -fu ${2:-origin} refs/pull/$1/head:pr/$1 && git checkout pr/$1; }; f"
   # pr-clean = "!git for-each-ref refs/heads/pr/* --format='%(refname)' | while read ref ; do branch=${ref#refs/heads/} ; git branch -D $branch ; done"


[core]
   editor = vim

[cola]
   fontdiff = Courier 10 Pitch,9,-1,5,50,0,0,0,0,0
   tabwidth = 4

[commit]
   template = /home/username/.gitmessage

[merge]
   tool = kdiff3

[guitool "mergetool"]
   cmd = git mergetool --no-prompt

[push]
  default = current

[color]
   ui = auto
   lc = show HEAD
   id = rev-parse HEAD
   lc = show HEAD
   id = rev-parse HEAD

[color "branch"]
   current = yellow reverse
   local = yellow
   remote = green

[color "diff"]
   meta = yellow bold
   frag = magenta bold
   old = red bold
   new = green bold
   whitespace = red reverse

[color "status"]
   added = yellow
   changed = green
   untracked = cyan

[user]
    email = gaetan@xeberon.net
    name = Gaetan Semet

[cola]
    fontdiff = Courier 10 Pitch,9,-1,5,50,0,0,0,0,0
    tabwidth = 4

[guitool "mergetool"]
  cmd = git mergetool --no-prompt

# [merge]
#     tool = kdiff3

[push]
  default = current

[gui]
  newbranchtemplate = gsemet_

[credential]
	helper = cache --timeout=6000
