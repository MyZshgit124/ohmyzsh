-='cd -'
...=../..
....=../../..
.....=../../../..
......=../../../../..
1='cd -1'
2='cd -2'
3='cd -3'
4='cd -4'
5='cd -5'
6='cd -6'
7='cd -7'
8='cd -8'
9='cd -9'
CA='2>&1 | cat -A'
G='| grep'
H='| head'
L='| less'
LL='2>&1 | less'
M='| most'
NE='2> /dev/null'
NUL='> /dev/null 2>&1'
P='2>&1| pygmentize -l pytb'
T='| tail'
_='sudo '
a='ansible '
acon='ansible-console '
aconf='ansible-config '
adoc='ansible-doc '
afind='ack -il'
ag=gpt-cli
agal='ansible-galaxy '
ainv='ansible-inventory '
aplaybook='ansible-playbook '
apull='ansible-pull '
arinit=ansible-role-init
asheet='electron '\''https://docs.google.com/spreadsheets/d/1R8zidCOnwYnklI1Yt_VIOG0euZpuJm_O1nh22J7xErY'\'
aval=ansible-vault
aver=ansible-version
ccat=colorize_cat
chuck='fortune -a /home/ars/.oh-my-zsh/plugins/chucknorris/fortunes'
chuck_cow='chuck | cowthink'
cless=colorize_less
clr='clear; echo Currently logged in on $TTY, as $USERNAME in directory $PWD.'
cp='cp -i'
db='deno bundle'
dbtcds='dbt docs generate; dbt docs serve'
dbtds='dbt docs generate --no-compile; dbt docs serve'
dbtfrt='dbtrs; dbt run --full-refresh; dbt test'
dbtlm='dbt ls -s state:modified'
dbtrm='dbt run -s state:modified'
dbtrs='dbt clean; dbt deps; dbt seed'
dbtrtm='dbtrm && dbttm'
dbttm='dbt test -m state:modified'
dc='deno compile'
dca='deno cache'
dfmt='deno fmt'
dh='deno help'
dli='deno lint'
drA='deno run -A'
drn='deno run'
dru='deno run --unstable'
drw='deno run --watch'
dts='deno test'
dud='du -d 1 -h'
dup='deno upgrade'
egrep='grep -E --color=auto --exclude-dir={.bzr,CVS,.git,.hg,.svn,.idea,.tox}'
fd='find . -type d -name'
ff='find . -type f -name'
fgrep='grep -F --color=auto --exclude-dir={.bzr,CVS,.git,.hg,.svn,.idea,.tox}'
fw='sudo firewall-cmd'
fwp='sudo firewall-cmd --permanent'
fwr='sudo firewall-cmd --reload'
fwrp='sudo firewall-cmd --runtime-to-permanent'
g=git
ga='git add'
gaa='git add --all'
gam='git am'
gama='git am --abort'
gamc='git am --continue'
gams='git am --skip'
gamscp='git am --show-current-patch'
gap='git apply'
gapa='git add --patch'
gapt='git apply --3way'
gau='git add --update'
gav='git add --verbose'
gb='git branch'
gbD='git branch --delete --force'
gba='git branch --all'
gbd='git branch --delete'
gbg='LANG=C git branch -vv | grep ": gone\]"'
gbgD='LANG=C git branch --no-color -vv | grep ": gone\]" | awk '\''{print $1}'\'' | xargs git branch -D'
gbgd='LANG=C git branch --no-color -vv | grep ": gone\]" | awk '\''{print $1}'\'' | xargs git branch -d'
gbl='git blame -w'
gbm='git branch --move'
gbnm='git branch --no-merged'
gbr='git branch --remote'
gbs='git bisect'
gbsb='git bisect bad'
gbsg='git bisect good'
gbsn='git bisect new'
gbso='git bisect old'
gbsr='git bisect reset'
gbss='git bisect start'
gc='git commit --verbose'
'gc!'='git commit --verbose --amend'
gcB='git checkout -B'
gca='git commit --verbose --all'
'gca!'='git commit --verbose --all --amend'
gcam='git commit --all --message'
'gcan!'='git commit --verbose --all --no-edit --amend'
'gcann!'='git commit --verbose --all --date=now --no-edit --amend'
'gcans!'='git commit --verbose --all --signoff --no-edit --amend'
gcas='git commit --all --signoff'
gcasm='git commit --all --signoff --message'
gcb='git checkout -b'
gcd='git checkout $(git_develop_branch)'
gcf='git config --list'
gch='git checkout $(git config gitflow.prefix.hotfix)'
gcl='git clone --recurse-submodules'
gclean='git clean --interactive -d'
gcm='git checkout $(git_main_branch)'
gcmsg='git commit --message'
'gcn!'='git commit --verbose --no-edit --amend'
gco='git checkout'
gcor='git checkout --recurse-submodules'
gcount='git shortlog --summary --numbered'
gcp='git cherry-pick'
gcpa='git cherry-pick --abort'
gcpc='git cherry-pick --continue'
gcr='git checkout $(git config gitflow.prefix.release)'
gcs='git commit --gpg-sign'
gcsm='git commit --signoff --message'
gcss='git commit --gpg-sign --signoff'
gcssm='git commit --gpg-sign --signoff --message'
gd='git diff'
gdca='git diff --cached'
gdct='git describe --tags $(git rev-list --tags --max-count=1)'
gdcw='git diff --cached --word-diff'
gds='git diff --staged'
gdt='git diff-tree --no-commit-id --name-only -r'
gdup='git diff @{upstream}'
gdw='git diff --word-diff'
gf='git fetch'
gfa='git fetch --all --prune --jobs=10'
gfg='git ls-files | grep'
gfl='git flow'
gflf='git flow feature'
gflff='git flow feature finish'
gflffc='git flow feature finish ${$(git_current_branch)#feature/}'
gflfp='git flow feature publish'
gflfpc='git flow feature publish ${$(git_current_branch)#feature/}'
gflfpll='git flow feature pull'
gflfs='git flow feature start'
gflh='git flow hotfix'
gflhf='git flow hotfix finish'
gflhfc='git flow hotfix finish ${$(git_current_branch)#hotfix/}'
gflhp='git flow hotfix publish'
gflhpc='git flow hotfix publish ${$(git_current_branch)#hotfix/}'
gflhs='git flow hotfix start'
gfli='git flow init'
gflr='git flow release'
gflrf='git flow release finish'
gflrfc='git flow release finish ${$(git_current_branch)#release/}'
gflrp='git flow release publish'
gflrpc='git flow release publish ${$(git_current_branch)#release/}'
gflrs='git flow release start'
gfo='git fetch origin'
gg='git gui citool'
gga='git gui citool --amend'
ggpull='git pull origin "$(git_current_branch)"'
ggpur=ggu
ggpush='git push origin "$(git_current_branch)"'
ggsup='git branch --set-upstream-to=origin/$(git_current_branch)'
ghf='git hf'
ghff='git hf feature'
ghfh='git hf hotfix'
ghfr='git hf release'
ghfs='git hf support'
ghfu='git hf update'
ghh='git help'
gignore='git update-index --assume-unchanged'
gignored='git ls-files -v | grep "^[[:lower:]]"'
git-svn-dcommit-push='git svn dcommit && git push github $(git_main_branch):svntrunk'
gk='\gitk --all --branches &!'
gke='\gitk --all $(git log --walk-reflogs --pretty=%h) &!'
gl='git pull'
glfsi='git lfs install'
glfsls='git lfs ls-files'
glfsmi='git lfs migrate import --include='
glfst='git lfs track'
glg='git log --stat'
glgg='git log --graph'
glgga='git log --graph --decorate --all'
glgm='git log --graph --max-count=10'
glgp='git log --stat --patch'
glo='git log --oneline --decorate'
globurl='noglob urlglobber '
glod='git log --graph --pretty="%Cred%h%Creset -%C(auto)%d%Creset %s %Cgreen(%ad) %C(bold blue)<%an>%Creset"'
glods='git log --graph --pretty="%Cred%h%Creset -%C(auto)%d%Creset %s %Cgreen(%ad) %C(bold blue)<%an>%Creset" --date=short'
glog='git log --oneline --decorate --graph'
gloga='git log --oneline --decorate --graph --all'
glol='git log --graph --pretty="%Cred%h%Creset -%C(auto)%d%Creset %s %Cgreen(%ar) %C(bold blue)<%an>%Creset"'
glola='git log --graph --pretty="%Cred%h%Creset -%C(auto)%d%Creset %s %Cgreen(%ar) %C(bold blue)<%an>%Creset" --all'
glols='git log --graph --pretty="%Cred%h%Creset -%C(auto)%d%Creset %s %Cgreen(%ar) %C(bold blue)<%an>%Creset" --stat'
glp=_git_log_prettily
gluc='git pull upstream $(git_current_branch)'
glum='git pull upstream $(git_main_branch)'
gm='git merge'
gma='git merge --abort'
gmom='git merge origin/$(git_main_branch)'
gms='git merge --squash'
gmtl='git mergetool --no-prompt'
gmtlvim='git mergetool --no-prompt --tool=vimdiff'
gmum='git merge upstream/$(git_main_branch)'
gp='git push'
gpd='git push --dry-run'
gpf='git push --force-with-lease --force-if-includes'
'gpf!'='git push --force'
gpoat='git push origin --all && git push origin --tags'
gpod='git push origin --delete'
gpr='git pull --rebase'
gpra='git pull --rebase --autostash'
gprav='git pull --rebase --autostash -v'
gpristine='git reset --hard && git clean --force -dfx'
gprom='git pull --rebase origin $(git_main_branch)'
gpromi='git pull --rebase=interactive origin $(git_main_branch)'
gprv='git pull --rebase -v'
gpsup='git push --set-upstream origin $(git_current_branch)'
gpsupf='git push --set-upstream origin $(git_current_branch) --force-with-lease --force-if-includes'
gpu='git push upstream'
gpv='git push --verbose'
gr='git remote'
gra='git remote add'
grb='git rebase'
grba='git rebase --abort'
grbc='git rebase --continue'
grbd='git rebase $(git_develop_branch)'
grbi='git rebase --interactive'
grbm='git rebase $(git_main_branch)'
grbo='git rebase --onto'
grbom='git rebase origin/$(git_main_branch)'
grbs='git rebase --skip'
grep='grep --color'
grev='git revert'
greva='git revert --abort'
grevc='git revert --continue'
grh='git reset'
grhh='git reset --hard'
grhk='git reset --keep'
grhs='git reset --soft'
grm='git rm'
grmc='git rm --cached'
grmv='git remote rename'
groh='git reset origin/$(git_current_branch) --hard'
grrm='git remote remove'
grs='git restore'
grset='git remote set-url'
grss='git restore --source'
grst='git restore --staged'
grt='cd "$(git rev-parse --show-toplevel || echo .)"'
gru='git reset --'
grup='git remote update'
grv='git remote --verbose'
gsb='git status --short --branch'
gsd='git svn dcommit'
gsh='git show'
gsi='git submodule init'
gsps='git show --pretty=short --show-signature'
gsr='git svn rebase'
gss='git status --short'
gst='git status'
gsta='git stash push'
gstaa='git stash apply'
gstall='git stash --all'
gstc='git stash clear'
gstd='git stash drop'
gstl='git stash list'
gstp='git stash pop'
gsts='git stash show --patch'
gstu='gsta --include-untracked'
gsu='git submodule update'
gsw='git switch'
gswc='git switch --create'
gswd='git switch $(git_develop_branch)'
gswm='git switch $(git_main_branch)'
gta='git tag --annotate'
gtl='gtl(){ git tag --sort=-v:refname -n --list "${1}*" }; noglob gtl'
gts='git tag --sign'
gtv='git tag | sort -V'
gunignore='git update-index --no-assume-unchanged'
gunwip='git rev-list --max-count=1 --format="%s" HEAD | grep -q "\--wip--" && git reset HEAD~1'
gup=$'\n    print -Pu2 "%F{yellow}[oh-my-zsh] \'%F{red}gup%F{yellow}\' is a deprecated alias, using \'%F{green}gpr%F{yellow}\' instead.%f"\n    gpr'
gupa=$'\n    print -Pu2 "%F{yellow}[oh-my-zsh] \'%F{red}gupa%F{yellow}\' is a deprecated alias, using \'%F{green}gpra%F{yellow}\' instead.%f"\n    gpra'
gupav=$'\n    print -Pu2 "%F{yellow}[oh-my-zsh] \'%F{red}gupav%F{yellow}\' is a deprecated alias, using \'%F{green}gprav%F{yellow}\' instead.%f"\n    gprav'
gupom=$'\n    print -Pu2 "%F{yellow}[oh-my-zsh] \'%F{red}gupom%F{yellow}\' is a deprecated alias, using \'%F{green}gprom%F{yellow}\' instead.%f"\n    gprom'
gupomi=$'\n    print -Pu2 "%F{yellow}[oh-my-zsh] \'%F{red}gupomi%F{yellow}\' is a deprecated alias, using \'%F{green}gpromi%F{yellow}\' instead.%f"\n    gpromi'
gupv=$'\n    print -Pu2 "%F{yellow}[oh-my-zsh] \'%F{red}gupv%F{yellow}\' is a deprecated alias, using \'%F{green}gprv%F{yellow}\' instead.%f"\n    gprv'
gwch='git whatchanged -p --abbrev-commit --pretty=medium'
gwip='git add -A; git rm $(git ls-files --deleted) 2> /dev/null; git commit --no-verify --no-gpg-sign --message "--wip-- [skip ci]"'
gwt='git worktree'
gwta='git worktree add'
gwtls='git worktree list'
gwtmv='git worktree move'
gwtrm='git worktree remove'
h=history
help=man
hga='hg add'
hgb='hg branch'
hgba='hg branches'
hgbk='hg bookmarks'
hgc='hg commit'
hgca='hg commit --amend'
hgci='hg commit --interactive'
hgco='hg checkout'
hgd='hg diff'
hged='hg diffmerge'
hgi='hg incoming'
hgl='hg pull -u'
hglg='hg log --stat -v'
hglgp='hg log --stat  -p -v'
hglr='hg pull --rebase'
hgo='hg outgoing'
hgp='hg push'
hgrep='fc -El 0 | grep'
hgs='hg status'
hgsl='hg log --limit 20 --template "{node|short} | {date|isodatesec} | {author|person}: {desc|strip|firstline}\n" '
hgun='hg resolve --list'
hist10='print -l ${(o)history%% *} | uniq -c | sort -nr | head -n 10'
history='omz_history -t '\''dd/mm/yyyy'\'
ipython='python3 -c "import IPython, sys; sys.exit(IPython.start_ipython())"'
kaput='tail -f ~/Library/Logs/Pow/apps/*'
l='ls -lFh'
lS='ls -1FSsh'
la='ls -lAFh'
lart='ls -1Fcart'
ldot='ls -ld .*'
lho=open_lighthouse_ticket
ll='ls -l'
lr='ls -tRFh'
lrt='ls -1Fcrt'
ls='ls --color=tty'
lsa='ls -lah'
lsn='ls -1'
lsr='ls -lARFh'
lt='ls -ltFh'
man='nocorrect man'
md='mkdir -p'
mkdir='mkdir -pv'
mkxzt=mkxzt
mv='mv -i'
naliases=n-aliases
ncd=n-cd
nenv=n-env
nfunctions=n-functions
nhelp=n-help
nhistory=n-history
nkill=n-kill
nmap_check_for_firewall='sudo nmap -sA -p1-65535 -v -T4'
nmap_check_for_vulns='nmap --script=vuln'
nmap_detect_versions='sudo nmap -sV -p1-65535 -O --osscan-guess -T4 -Pn'
nmap_fast='nmap -F -T5 --version-light --top-ports 300'
nmap_fin='sudo nmap -sF -v'
nmap_full='sudo nmap -sS -T4 -PE -PP -PS80,443 -PY -g 53 -A -p1-65535 -v'
nmap_full_udp='sudo nmap -sS -sU -T4 -A -v -PE -PS22,25,80 -PA21,23,80,443,3389 '
nmap_full_with_scripts='sudo nmap -sS -sU -T4 -A -v -PE -PP -PS21,22,23,25,80,113,31339 -PA80,113,443,10042 -PO --script all '
nmap_list_interfaces='nmap --iflist'
nmap_open_ports='nmap --open'
nmap_ping_scan='nmap -n -sP'
nmap_ping_through_firewall='nmap -PS -PA'
nmap_slow='sudo nmap -sS -v -T1'
nmap_traceroute='sudo nmap -sP -PE -PS22,25,80 -PA21,23,80,3389 -PU -PO --traceroute '
nmap_web_safe_osscan='sudo nmap -p 80,443 -O -v --osscan-guess --fuzzy '
noptions=n-options
npanelize=n-panelize
npmD='npm i -D '
npmE='PATH="$(npm bin)":"$PATH"'
npmF='npm i -f'
npmI='npm init'
npmL='npm list'
npmL0='npm ls --depth=0'
npmO='npm outdated'
npmP='npm publish'
npmR='npm run'
npmS='npm i -S '
npmSe='npm search'
npmU='npm update'
npmV='npm -v'
npmg='npm i -g '
npmi='npm info'
npmrb='npm run build'
npmrd='npm run dev'
npmst='npm start'
npmt='npm test'
ohmyzsh='code-insiders ~/.oh-my-zsh'
p='ps -f'
pamupdate=$'{\n    nocorrect sudo pamac update --no-confirm &&\n    nocorrect sudo pacman -Syyu --noconfirm &&\n    nocorrect yay -Sua --noconfirm &&\n    nocorrect pamac clean --no-confirm\n}'
path='print -l $path'
pb='plz build'
ping='ping -c 5'
pipenv='pipenv --python=3.11.6'
pscpu='ps -e -o pcpu,cpu,nice,state,cputime,args | sort -k1,1n -nr'
pscpu10='ps -e -o pcpu,cpu,nice,state,cputime,args | sort -k1,1n -nr | head -n 10'
psmem='ps -e -orss=,args= | sort -b -k1 -nr'
psmem10='ps -e -orss=,args= | sort -b -k1 -nr | head -n 10'
pt='plz test'
pw='plz watch'
py=python3
pyfind='find . -name "*.py"'
pygrep='grep -nr --include="*.py"'
pylint-quick='pylint --reports=n'
pyserver='python3 -m http.server'
r=repo
rd=rmdir
rfa='repo forall -c'
rfap='repo forall -p -c'
rinf='repo info'
rm='rm -i'
rra='repo rebase --auto-stash'
rs='repo sync'
rsrra='repo sync ; repo rebase --auto-stash'
rst='repo status'
rsto='repo status -o'
rsync-copy='rsync -avz --progress -h'
rsync-move='rsync -avz --progress -h --remove-source-files'
rsync-synchronize='rsync -avzu --delete --progress -h'
rsync-update='rsync -avzu --progress -h'
ru='repo upload'
run-help=man
sgrep='grep -R -n -H -C 5 --exclude-dir={.git,.svn,CVS} '
sortnr='sort -n -r'
su='nocorrect su'
sudo='nocorrect sudo'
sup='sudo supervisorctl'
supa='sudo supervisorctl avail'
supad='sudo supervisorctl add'
suprl='sudo supervisorctl reload'
suprm='sudo supervisorctl remove'
suprr='sudo supervisorctl reread'
suprs='sudo supervisorctl restart'
sups='sudo supervisorctl status'
supso='sudo supervisorctl stop'
supsr='sudo supervisorctl start'
supt='sudo supervisorctl tail'
supu='sudo supervisorctl update'
t='tail -f'
tbe='toolbox enter'
tbr='toolbox run'
tia='tig --all'
tib='tig blame -C'
tif='tig reflog'
til='tig log'
tis='tig status'
translit=com.github.artemanufrij.translit
unexport=unset
urldecode='node -e "console.log(decodeURIComponent(process.argv[1]))"'
urlencode='node -e "console.log(encodeURIComponent(process.argv[1]))"'
vba='vagrant box add'
vbl='vagrant box list'
vbo='vagrant box outdated'
vbr='vagrant box remove'
vbu='vagrant box update'
vd='vagrant destroy'
vdf='vagrant destroy -f'
vgi='vagrant init'
vgs='vagrant global-status'
vh='vagrant halt'
vp='vagrant push'
vpli='vagrant plugin install'
vpll='vagrant plugin list'
vplu='vagrant plugin update'
vplun='vagrant plugin uninstall'
vpr='vagrant provision'
vr='vagrant reload'
vrdp='vagrant rdp'
vre='vagrant resume'
vrp='vagrant reload --provision'
vsca='code --add'
vscd='code --diff'
vscde='code --disable-extensions'
vsced='code --extensions-dir'
vscg='code --goto'
vscie='code --install-extension'
vscl='code --log'
vscn='code --new-window'
vscode=code-insiders
vscp='code --profile'
vscr='code --reuse-window'
vscu='code --user-data-dir'
vscue='code --uninstall-extension'
vscv='code --verbose'
vscw='code --wait'
vsh='vagrant share'
vssh='vagrant ssh'
vsshc='vagrant ssh-config'
vssp='vagrant suspend'
vst='vagrant status'
vup='vagrant up'
which-command=whence
x=extract
z='zshz 2>&1'
zi=__zoxide_zi
zshconfig='code-insiders ~/.zshrc'
zshrc='${=EDITOR} ${ZDOTDIR:-$HOME}/.zshrc'
