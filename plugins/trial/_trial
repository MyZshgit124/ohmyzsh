#compdef trial
#
# Generated by 
# trial --_shell-completion zsh:3


_arguments -s -A "-*" \
'*:file | module | package | TestCase | testMethod (*.py):_files -g "*.py"' \
'--coverage[Generate coverage information in the coverage file in the directory specified by the temp-directory option.]' \
"(--debug)-b[Run tests in the Python debugger. Will load '.pdbrc' from current directory if it exists.]" \
"(-b)--debug[Run tests in the Python debugger. Will load '.pdbrc' from current directory if it exists.]" \
'(--debug-stacktraces)-B[Report Deferred creation and callback stack traces]' \
'(-B)--debug-stacktraces[Report Deferred creation and callback stack traces]' \
'--disablegc[Disable the garbage collector]' \
'(--dry-run)-n[do everything but run the tests]' \
'(-n)--dry-run[do everything but run the tests]' \
'--force-gc[Have Trial run gc.collect() before and after each test case.]' \
'(--help)-h[Display this help and exit.]' \
'(-h)--help[Display this help and exit.]' \
'--help-reactors[Display a list of possibly available reactor names.]' \
'--help-reporters[Help on available output plugins (reporters)]' \
'(--logfile)-l[log file name]:log file name (*):_files -g "*"' \
'(-l)--logfile=[log file name]:log file name (*):_files -g "*"' \
"(--no-recurse)-N[Don't recurse into packages]" \
"(-N)--no-recurse[Don't recurse into packages]" \
"--nopm[don't automatically jump into debugger for postmorteming of exceptions]" \
'--profile[Run tests under the Python profiler]' \
'(--random)-z[Run tests in random order using the specified seed]:random seed:' \
'(-z)--random=[Run tests in random order using the specified seed]:random seed:' \
'(--reactor)-r[Which reactor to use (see --help-reactors for a list of possibilities)]:reactor:(debug-gui win32 glib2 kqueue epoll iocp gtk cf gtk2 default gi poll gtk3 select wx qt)' \
'(-r)--reactor=[Which reactor to use (see --help-reactors for a list of possibilities)]:reactor:(debug-gui win32 glib2 kqueue epoll iocp gtk cf gtk2 default gi poll gtk3 select wx qt)' \
'--recursionlimit=[see sys.setrecursionlimit()]:recursionlimit:_files' \
'--reporter=[The reporter to use for this test run.  See --help-reporters for more info.]:reporter:(subunit bwverbose text verbose timing summary)' \
'(--rterrors)-e[realtime errors, print out tracebacks as soon as they occur]' \
'(-e)--rterrors[realtime errors, print out tracebacks as soon as they occur]' \
'--spew[Print an insanely verbose log of everything that happens.  Useful when debugging freezes or locks in complex code.]' \
"--tbformat=[Specify the format to display tracebacks with. Valid formats are 'plain', 'emacs', and 'cgitb' which uses the nicely verbose stdlib cgitb.text function]:tbformat:(plain emacs cgitb)" \
'--temp-directory=[Path to use as working directory for tests.]:temp-directory:_files' \
'--testmodule=[Filename to grep for test cases (-*- test-case-name)]:testmodule:_files' \
'--unclean-warnings[Turn dirty reactor errors into warnings]' \
'(--until-failure)-u[Repeat test until it fails]' \
'(-u)--until-failure[Repeat test until it fails]' \
'--version[Display Twisted version and exit.]' \
'--without-module=[Fake the lack of the specified modules, separated with commas.]:without-module:_files' \
&& return 0

